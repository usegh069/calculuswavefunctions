name: Install & Update Emscripten
run-name: ${{ github.actor }} is running Install & Update Emscripten 🚀
on: [push]
jobs:
  Build_emscripten:
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get install python3
      # Install Python
      - run: sudo apt-get install cmake
      # Install CMake (optional, only needed for tests and building Binaryen or LLVM)
      - run: git clone https://github.com/emscripten-core/emsdk.git emsdk
      # Get the emsdk repo
      - run: | 
          cd $GITHUB_WORKSPACE/emsdk          
          # Fetch the latest version of the emsdk (not needed the first time you clone)
          ./emsdk install latest
          # Make the "latest" SDK "active" for the current user. (writes .emscripten file)
          ./emsdk activate latest
          # Activate PATH and other environment variables in the current terminal
          source ./emsdk_env.sh     
          # Get the emsdk version
          emsdk list > $GITHUB_WORKSPACE/emscripten-version.txt 
  Cache:
    needs: Build_emscripten
    runs-on: ubuntu-latest
    steps:
      - name: Cache Emscripten
        uses: actions/cache@v4.2.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: $GITHUB_WORKSPACE/emsdk
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-emscripten-${{ hashFiles('emscripten-version.txt') }}
          # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          restore-keys: | 
            ${{ runner.os }}-emscripten-
          # The chunk size used to split up large files during upload, in bytes
          upload-chunk-size: 40000000
      
  Logging:       
    needs:
      - Build_emscripten
      - Cache
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Update runner status
        run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - name: Update workflow status
        run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: Update job status
        run: echo "🍏 This job's status is ${{ job.status }}."
      - name: List files in the repository
        run: echo $(ls)
      - run: | 
         echo "
         ░██╗░░░░░░░██╗░█████╗░██████╗░██╗░░██╗░██████╗
         ░██║░░██╗░░██║██╔══██╗██╔══██╗██║░██╔╝██╔════╝
         ░╚██╗████╗██╔╝██║░░██║██████╔╝█████═╝░╚█████╗░
         ░░████╔═████║░██║░░██║██╔══██╗██╔═██╗░░╚═══██╗
         ░░╚██╔╝░╚██╔╝░╚█████╔╝██║░░██║██║░╚██╗██████╔╝
         ░░░╚═╝░░░╚═╝░░░╚════╝░╚═╝░░╚═╝╚═╝░░╚═╝╚═════╝░
         "









